"use strict";

var test = require('tape');
var sinon = require('sinon');
var forEach = require('./');

test('exists', function(t) {
    t.equal(typeof forEach, 'function');
    t.end();
});

test('do nothing', function(t) {
    var callback = sinon.spy();
    forEach();
    t.false(callback.called);
    forEach(123, "abc");
    t.false(callback.called);
    forEach(callback);
    t.false(callback.called);
    forEach([1, 2, 3], null);
    t.false(callback.called);
    t.end();
});

test('call callback each iteration', function(t) {
    var callback = sinon.spy();
    forEach([1, 2, 3], callback);
    t.equal(callback.callCount, 3);
    callback = sinon.spy();
    forEach([1, 2, 3, 4], callback);
    t.equal(callback.callCount, 4);
    t.end();
});

test('pass item each iteration', function(t) {
    var result = [];
    function iteratee(value) {
        result.push(value);
    }
    forEach([1, 2, 3], iteratee);
    t.deepEqual(result, [1, 2, 3]);
    t.end();
});

test('pass key each iteration', function(t) {
    var result = [];
    function iteratee(value, key) {
        result.push(key);
    }
    forEach([1, 2, 3], iteratee);
    t.deepEqual(result, [0, 1, 2]);
    t.end();
});
